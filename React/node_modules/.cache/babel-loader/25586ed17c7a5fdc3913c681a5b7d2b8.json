{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mroads\\\\Desktop\\\\AWS_Rekognition_API\\\\React\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [file, setFile] = React.useState(null);\n  const [data, setData] = React.useState({});\n\n  const fileChangedHandler = event => setFile(event.target.files[0]);\n\n  const uploadHandler = img => {\n    axios.post('https://aq9mlslujf.execute-api.us-east-1.amazonaws.com/FaceSimilarityPOC', img).then(res => console.log('check response :', setData(res.data[0]))).catch(e => console.log('check error :', e));\n  };\n\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"user\"\n  };\n  const webcamRef = React.useRef(null);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    uploadHandler(imageSrc); // calling uploadHanlder fundction to trigger backend API\n  }, [webcamRef]);\n  React.useEffect(() => {\n    setInterval(() => {\n      capture();\n    }, 3000); // 3000 means, capture function will be triggered after each 3 seconds\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Mpp\",\n      children: \"Face Similarity Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      height: 720,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      width: 1280,\n      videoConstraints: videoConstraints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: capture,\n      children: \"Capture photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), Object.entries(data).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jWKeniq6/xGQKHdZATuv0eyVplA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Mroads/Desktop/AWS_Rekognition_API/React/src/App.js"],"names":["React","axios","Webcam","App","file","setFile","useState","data","setData","fileChangedHandler","event","target","files","uploadHandler","img","post","then","res","console","log","catch","e","videoConstraints","width","height","facingMode","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","useEffect","setInterval","Object","entries","length","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACM,QAAN,CAAe,EAAf,CAAxB;;AAEA,QAAMG,kBAAkB,GAAGC,KAAK,IAAIL,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAA3C;;AAEA,QAAMC,aAAa,GAAIC,GAAD,IAAS;AAC7Bb,IAAAA,KAAK,CAACc,IAAN,CAAW,0EAAX,EAAuFD,GAAvF,EACGE,IADH,CACSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCX,OAAO,CAACS,GAAG,CAACV,IAAJ,CAAS,CAAT,CAAD,CAAvC,CADjB,EAEGa,KAFH,CAEUC,CAAD,IAAOH,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,CAA7B,CAFhB;AAGD,GAJD;;AAKA,QAAMC,gBAAgB,GAAG;AACvBC,IAAAA,KAAK,EAAE,IADgB;AAEvBC,IAAAA,MAAM,EAAE,GAFe;AAGvBC,IAAAA,UAAU,EAAE;AAHW,GAAzB;AAKA,QAAMC,SAAS,GAAG1B,KAAK,CAAC2B,MAAN,CAAa,IAAb,CAAlB;AACA,QAAMC,OAAO,GAAG5B,KAAK,CAAC6B,WAAN,CAAkB,MAAM;AACpC,UAAMC,QAAQ,GAAGJ,SAAS,CAACK,OAAV,CAAkBC,aAAlB,EAAjB;AACAnB,IAAAA,aAAa,CAACiB,QAAD,CAAb,CAFoC,CAEV;AAC3B,GAHa,EAGZ,CAACJ,SAAD,CAHY,CAAhB;AAKA1B,EAAAA,KAAK,CAACiC,SAAN,CAAgB,MAAM;AACpBC,IAAAA,WAAW,CAAC,MAAM;AAChBN,MAAAA,OAAO;AACR,KAFU,EAER,IAFQ,CAAX,CADoB,CAGR;AACb,GAJD;AAMA,sBACE;AAAK,IAAA,SAAS,EAAE,UAAhB;AAAA,4BACD;AAAI,MAAA,SAAS,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,eAGA,QAAC,MAAD;AACI,MAAA,KAAK,EAAE,KADX;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,GAAG,EAAEF,SAHT;AAII,MAAA,gBAAgB,EAAC,YAJrB;AAKI,MAAA,KAAK,EAAE,IALX;AAMI,MAAA,gBAAgB,EAAEJ;AANtB;AAAA;AAAA;AAAA;AAAA,YAHA,eAWA;AAAQ,MAAA,OAAO,EAAEM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXA,EAaGO,MAAM,CAACC,OAAP,CAAe7B,IAAf,EAAqB8B,MAArB,GAA8B,CAA9B,iBAAmC;AAAA,gBAAOC,IAAI,CAACC,SAAL,CAAehC,IAAf;AAAP;AAAA;AAAA;AAAA;AAAA,YAbtC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA7CQJ,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Webcam from \"react-webcam\";\nfunction App() {\n  const [file, setFile] = React.useState(null);\n  const [data, setData] = React.useState({});\n\n  const fileChangedHandler = event => setFile(event.target.files[0]);\n\n  const uploadHandler = (img) => {\n    axios.post('https://aq9mlslujf.execute-api.us-east-1.amazonaws.com/FaceSimilarityPOC', img)\n      .then((res) => console.log('check response :', setData(res.data[0])))\n      .catch((e) => console.log('check error :', e))\n  }\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"user\"\n  }\n  const webcamRef = React.useRef(null);\n  const capture = React.useCallback(() => {\n      const imageSrc = webcamRef.current.getScreenshot();\n      uploadHandler(imageSrc)   // calling uploadHanlder fundction to trigger backend API\n    },[webcamRef]);\n\n  React.useEffect(() => {\n    setInterval(() => {\n      capture()\n    }, 3000);   // 3000 means, capture function will be triggered after each 3 seconds\n  });\n  \n  return (\n    <div className= 'body App'>\n\t  <h1 className= 'Mpp'>Face Similarity Score</h1>\n    {/* <input type=\"file\" onChange={fileChangedHandler} /> */}\n    <Webcam\n        audio={false}\n        height={720}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        width={1280}\n        videoConstraints={videoConstraints}\n      />\n    <button onClick={capture}>Capture photo</button>\n    {/* <button onClick={uploadHandler}>Upload</button> */}\n      {Object.entries(data).length > 0 && <div>{ JSON.stringify(data)}</div>}\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}